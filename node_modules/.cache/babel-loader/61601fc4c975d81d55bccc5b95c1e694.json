{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samuel\\\\pleaseworkforked\\\\src\\\\WalletC.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport injected from './Connectors';\nimport walletconnect from './Connectors';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { useWeb3React } from '@web3-react/core';\nimport Web3 from 'web3';\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    // required\n    options: {\n      infuraId: \"f2b9103e4c9c453789af2575a99076e9\" // required\n\n    }\n  }\n};\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\",\n  // optional\n  cacheProvider: false,\n  // optional\n  providerOptions // required\n\n});\nexport default function WalletC() {\n  _s();\n\n  const web3r = useWeb3React();\n  const {\n    active,\n    account,\n    library,\n    connector,\n    activate,\n    deactivate,\n    context\n  } = useWeb3React();\n  const [acct, setAcct] = useState('');\n\n  async function connectWc() {\n    const provider = await web3Modal.connect();\n    const web3 = new Web3(provider);\n    const accounts = await web3.eth.getAccounts();\n    setAcct(accounts[0]);\n    const wcaccount = acct;\n    console.log(wcaccount);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connect\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWc,\n      children: \"Connect with WalletConnect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), acct]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WalletC, \"SeKCrrW354nYZRnREUH3Q0kxyV4=\", false, function () {\n  return [useWeb3React, useWeb3React];\n});\n\n_c = WalletC;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletC\");","map":{"version":3,"sources":["C:/Users/samuel/pleaseworkforked/src/WalletC.js"],"names":["React","useState","useEffect","injected","walletconnect","Web3ReactProvider","useWeb3React","Web3","Web3Modal","WalletConnectProvider","providerOptions","package","options","infuraId","web3Modal","network","cacheProvider","WalletC","web3r","active","account","library","connector","activate","deactivate","context","acct","setAcct","connectWc","provider","connect","web3","accounts","eth","getAccounts","wcaccount","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,aAAP,MAA0B,cAA1B;AACA,SAAQC,iBAAR,QAAgC,kBAAhC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;;AACA,MAAMC,eAAe,GAAG;AACtBN,EAAAA,aAAa,EAAE;AACbO,IAAAA,OAAO,EAAEF,qBADI;AACmB;AAChCG,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE,kCADH,CACsC;;AADtC;AAFI;AADO,CAAxB;AAQA,MAAMC,SAAS,GAAG,IAAIN,SAAJ,CAAc;AAC9BO,EAAAA,OAAO,EAAE,SADqB;AACV;AACpBC,EAAAA,aAAa,EAAE,KAFe;AAER;AACtBN,EAAAA,eAH8B,CAGd;;AAHc,CAAd,CAAlB;AAKA,eAAe,SAASO,OAAT,GAAmB;AAAA;;AAClC,QAAMC,KAAK,GAAGZ,YAAY,EAA1B;AACA,QAAM;AAAEa,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,SAA5B;AAAuCC,IAAAA,QAAvC;AAAiDC,IAAAA,UAAjD;AAA6DC,IAAAA;AAA7D,MAAyEnB,YAAY,EAA3F;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAC,EAAD,CAAhC;;AACE,iBAAe2B,SAAf,GAA2B;AACzB,UAAMC,QAAQ,GAAG,MAAMf,SAAS,CAACgB,OAAV,EAAvB;AACA,UAAMC,IAAI,GAAG,IAAIxB,IAAJ,CAASsB,QAAT,CAAb;AACA,UAAMG,QAAQ,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASC,WAAT,EAAvB;AACAP,IAAAA,OAAO,CAACK,QAAQ,CAAC,CAAD,CAAT,CAAP;AACA,UAAMG,SAAS,GAAGT,IAAlB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACA;AAAQ,MAAA,OAAO,EAAEP,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA,YAFA,EAGCF,IAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAnBuBT,O;UACVX,Y,EACiEA,Y;;;KAFvDW,O","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport injected from './Connectors';\r\nimport walletconnect from './Connectors';\r\nimport {Web3ReactProvider} from '@web3-react/core';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport Web3 from 'web3';\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nconst providerOptions = {\r\n  walletconnect: {\r\n    package: WalletConnectProvider, // required\r\n    options: {\r\n      infuraId: \"f2b9103e4c9c453789af2575a99076e9\" // required\r\n    }\r\n  }\r\n};\r\nconst web3Modal = new Web3Modal({\r\n  network: \"mainnet\", // optional\r\n  cacheProvider: false, // optional\r\n  providerOptions // required\r\n});\r\nexport default function WalletC() {\r\nconst web3r = useWeb3React();\r\nconst { active, account, library, connector, activate, deactivate, context } = useWeb3React();\r\nconst [acct, setAcct] = useState('');\r\n  async function connectWc() {\r\n    const provider = await web3Modal.connect();\r\n    const web3 = new Web3(provider);\r\n    const accounts = await web3.eth.getAccounts();\r\n    setAcct(accounts[0]);\r\n    const wcaccount = acct;\r\n    console.log(wcaccount);\r\n  }\r\n  return (\r\n    <div className=\"connect\">\r\n    <button onClick={connectWc}>Connect with WalletConnect</button>\r\n    <br></br>\r\n    {acct}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
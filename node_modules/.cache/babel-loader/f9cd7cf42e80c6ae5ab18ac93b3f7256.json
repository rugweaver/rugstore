{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/samuel/pleaseworkforked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/samuel/pleaseworkforked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/samuel/pleaseworkforked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import injected from'./Connectors';import walletconnect from'./Connectors';import{Web3ReactProvider}from'@web3-react/core';import{useWeb3React}from'@web3-react/core';import Web3 from'web3';import Web3Modal from\"web3modal\";import WalletConnectProvider from\"@walletconnect/web3-provider\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var providerOptions={walletconnect:{package:WalletConnectProvider,// required\noptions:{infuraId:\"f2b9103e4c9c453789af2575a99076e9\"// required\n}}};var web3Modal=new Web3Modal({network:\"mainnet\",// optional\ncacheProvider:false,// optional\nproviderOptions:providerOptions// required\n});export default function WalletC(){var web3r=useWeb3React();var _useWeb3React=useWeb3React(),active=_useWeb3React.active,account=_useWeb3React.account,library=_useWeb3React.library,connector=_useWeb3React.connector,activate=_useWeb3React.activate,deactivate=_useWeb3React.deactivate,context=_useWeb3React.context;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),acct=_useState2[0],setAcct=_useState2[1];function connectWc(){return _connectWc.apply(this,arguments);}function _connectWc(){_connectWc=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider,web3,accounts,wcaccount;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return web3Modal.connect();case 2:provider=_context.sent;web3=new Web3(provider);_context.next=6;return web3.eth.getAccounts();case 6:accounts=_context.sent;setAcct(accounts[0]);wcaccount=acct;console.log(wcaccount);case 10:case\"end\":return _context.stop();}}},_callee);}));return _connectWc.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:\"connect\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:connectWc,children:\"Connect with WalletConnect\"}),/*#__PURE__*/_jsx(\"br\",{}),acct]});}","map":{"version":3,"sources":["C:/Users/samuel/pleaseworkforked/src/WalletC.js"],"names":["React","useState","useEffect","injected","walletconnect","Web3ReactProvider","useWeb3React","Web3","Web3Modal","WalletConnectProvider","providerOptions","package","options","infuraId","web3Modal","network","cacheProvider","WalletC","web3r","active","account","library","connector","activate","deactivate","context","acct","setAcct","connectWc","connect","provider","web3","eth","getAccounts","accounts","wcaccount","console","log"],"mappings":"kcAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,cAA1B,CACA,OAAQC,iBAAR,KAAgC,kBAAhC,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,WAAtB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,8BAAlC,C,wFACA,GAAMC,CAAAA,eAAe,CAAG,CACtBN,aAAa,CAAE,CACbO,OAAO,CAAEF,qBADI,CACmB;AAChCG,OAAO,CAAE,CACPC,QAAQ,CAAE,kCAAmC;AADtC,CAFI,CADO,CAAxB,CAQA,GAAMC,CAAAA,SAAS,CAAG,GAAIN,CAAAA,SAAJ,CAAc,CAC9BO,OAAO,CAAE,SADqB,CACV;AACpBC,aAAa,CAAE,KAFe,CAER;AACtBN,eAAe,CAAfA,eAAgB;AAHc,CAAd,CAAlB,CAKA,cAAe,SAASO,CAAAA,OAAT,EAAmB,CAClC,GAAMC,CAAAA,KAAK,CAAGZ,YAAY,EAA1B,CADkC,kBAE6CA,YAAY,EAFzD,CAE1Ba,MAF0B,eAE1BA,MAF0B,CAElBC,OAFkB,eAElBA,OAFkB,CAETC,OAFS,eAETA,OAFS,CAEAC,SAFA,eAEAA,SAFA,CAEWC,QAFX,eAEWA,QAFX,CAEqBC,UAFrB,eAEqBA,UAFrB,CAEiCC,OAFjC,eAEiCA,OAFjC,eAGVxB,QAAQ,CAAC,EAAD,CAHE,wCAG3ByB,IAH2B,eAGrBC,OAHqB,uBAIjBC,CAAAA,SAJiB,qIAIhC,8LACyBd,CAAAA,SAAS,CAACe,OAAV,EADzB,QACQC,QADR,eAEQC,IAFR,CAEe,GAAIxB,CAAAA,IAAJ,CAASuB,QAAT,CAFf,uBAGyBC,CAAAA,IAAI,CAACC,GAAL,CAASC,WAAT,EAHzB,QAGQC,QAHR,eAIEP,OAAO,CAACO,QAAQ,CAAC,CAAD,CAAT,CAAP,CACMC,SALR,CAKoBT,IALpB,CAMEU,OAAO,CAACC,GAAR,CAAYF,SAAZ,EANF,uDAJgC,4CAYhC,mBACE,aAAK,SAAS,CAAC,SAAf,wBACA,eAAQ,OAAO,CAAEP,SAAjB,wCADA,cAEA,aAFA,CAGCF,IAHD,GADF,CAOD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport injected from './Connectors';\r\nimport walletconnect from './Connectors';\r\nimport {Web3ReactProvider} from '@web3-react/core';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport Web3 from 'web3';\r\nimport Web3Modal from \"web3modal\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nconst providerOptions = {\r\n  walletconnect: {\r\n    package: WalletConnectProvider, // required\r\n    options: {\r\n      infuraId: \"f2b9103e4c9c453789af2575a99076e9\" // required\r\n    }\r\n  }\r\n};\r\nconst web3Modal = new Web3Modal({\r\n  network: \"mainnet\", // optional\r\n  cacheProvider: false, // optional\r\n  providerOptions // required\r\n});\r\nexport default function WalletC() {\r\nconst web3r = useWeb3React();\r\nconst { active, account, library, connector, activate, deactivate, context } = useWeb3React();\r\nconst [acct, setAcct] = useState('');\r\n  async function connectWc() {\r\n    const provider = await web3Modal.connect();\r\n    const web3 = new Web3(provider);\r\n    const accounts = await web3.eth.getAccounts();\r\n    setAcct(accounts[0]);\r\n    const wcaccount = acct;\r\n    console.log(wcaccount);\r\n  }\r\n  return (\r\n    <div className=\"connect\">\r\n    <button onClick={connectWc}>Connect with WalletConnect</button>\r\n    <br></br>\r\n    {acct}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}